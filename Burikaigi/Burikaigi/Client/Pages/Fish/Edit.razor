@page "/fish/edit"
@page "/fish/edit/{Id:long}"
@inherits BasePage
@using Burikaigi.Shared
@inject Services.HttpService Http
@inject NavigationManager NavigationManager
@inject Sotsera.Blazor.Toaster.IToaster Toaster

<PageTitle>魚</PageTitle>

<h1>魚</h1>

<div>
<label>名前</label>
<input type="text" @bind-value="_魚.名前" @bind-value:event="oninput" />
</div>

<div>
<label>綱</label>
<input type="text" @bind-value="_魚.綱" @bind-value:event="oninput" />
</div>

<div>
<label>目</label>
<input type="text" @bind-value="_魚.目" @bind-value:event="oninput" />
</div>

<div>
<label>科</label>
<input type="text" @bind-value="_魚.科" @bind-value:event="oninput" />
</div>

<div>
<label>属</label>
<input type="text" @bind-value="_魚.属" @bind-value:event="oninput" />
</div>

<div>
<label>生息環境</label>
<input type="text" @bind-value="_魚.生息環境" @bind-value:event="oninput" />
</div>

<div>
<label>食性</label>
<input type="text" @bind-value="_魚.食性" @bind-value:event="oninput" />
</div>

<div>
<label>星</label>
<input type="text" @bind-value="_星" @bind-value:event="oninput" />
</div>

<button class="btn btn-outline-success w-200px"
		@onclick="戻るクリックイベント">
	戻る
</button>
<button class="btn btn-outline-primary w-200px"
		@onclick="登録クリックイベント">
	登録
</button>
<button class="btn btn-outline-danger w-200px"
        @onclick="(()=>破棄クリックイベント())">
        削除
</button>

@code {
    [Parameter]
    public long Id { get; set; }

    魚 _魚 = new 魚();
    string _星 = "";

    protected override async Task OnParametersSetAsync()
    {
        if (Id == 0) return;
        var result = await Http.GetFromJsonAsync<魚>($"/fishapi/{Id}");
        _魚 = result ?? new 魚();
        _星 = _魚.星_表示();
    }

    void 戻るクリックイベント()
        => NavigationManager.NavigateTo($"fish");

    async Task 登録クリックイベント()
    {
        if (!_魚.星設定(_星))
        {
            Toaster.Error("★の数は5個までです");
            return;
        }
        if (!await Http.PostAsJsonAsync("/fishapi", _魚)) return;
        Toaster.Success( "登録しました。");
        NavigationManager.NavigateTo($"fish");
    }

	async Task 破棄クリックイベント()
	{
		if (!await Http.DeleteAsync($"/fishapi/{Id}")) 
        return;NavigationManager.NavigateTo($"fish");
	}
}
